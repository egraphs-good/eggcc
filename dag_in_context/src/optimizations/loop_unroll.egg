;; Some simple simplifications of loops
(ruleset loop-unroll)

(rule
 ((= lhs (DoWhile inputs outputs))
  (ContextOf lhs ctx)
  (HasType inputs inputs-ty)
  (= outputs-len (tuple-length outputs)))
 ((let executed-once
    (Subst ctx inputs outputs))
  (let executed-once-body
     (SubTuple executed-once 1 (- outputs-len 1)))
  (union lhs
    ;; check if we need to continue executing the loop
    (If (Get executed-once 0)
        executed-once-body ;; inputs are the body executed once
        (DoWhile (Arg inputs-ty)
          outputs)
        (Arg inputs-ty))))
 :ruleset loop-unroll)
