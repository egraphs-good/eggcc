(ruleset fast-analysis)

(function Id-Of (Expr) Id)

;; sanity check
(rule ((= (id a) (id b))
    (!= a b))
  ((panic "Id-Of: Ids don't match"))
  :ruleset fast-analysis)

(rule ((Num id n))
  ((union (Id-Of (Num id n)) id))
  :ruleset fast-analysis)
(rule ((Bool id b))
  ((union (Id-Of (Bool id b)) id))
  :ruleset fast-analysis)

(rule ((badd a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (badd a b)) aid))
  :ruleset fast-analysis)
(rule ((bsub a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (bsub a b)) aid))
  :ruleset fast-analysis)
(rule ((bmul a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (bmul a b)) aid))
  :ruleset fast-analysis)
(rule ((blt a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (blt a b)) aid))
  :ruleset fast-analysis)
(rule ((band a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (band a b)) aid))
  :ruleset fast-analysis)
(rule ((bor a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (bor a b)) aid))
  :ruleset fast-analysis)

(rule ((PRINT a b)
    (= aid (Id-Of a)))
  ((union (Id-Of (PRINT a b)) aid))
  :ruleset fast-analysis)

(rule ((Loop id a b c))
  ((union (Id-Of (Loop id a b c)) id))
  :ruleset fast-analysis)
(rule ((Switch id a b c))
  ((union (Id-Of (Switch id a b c)) id))
  :ruleset fast-analysis)
(rule ((Func id name body))
  ((union (Id-Of (Func id name body)) id))
  :ruleset fast-analysis)

(rule ((Arg id a))
  ((union (Id-Of (Arg id a)) id))
  :ruleset fast-analysis)
